name: Sync Hugging Face App

on:
  workflow_dispatch:

jobs:
  sync-hf:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    env:
      HF_USERNAME: 'DmitryRyumin'
      HF_REPO: 'NewEraAI-Papers'
      LOCAL_DIR: 'NewEraAI-Papers'
      HF_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN }}
      JSON_DATA_PATH: 'json_data/2024/WACV'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        continue-on-error: true # Continue with the workflow even if the checkout fails
        with:
          ref: ${{ github.event.before || 'main' }}

      - name: Install Git LFS
        run: |
          if [ ! -x "$(command -v git-lfs)" ]; then
            echo "Git LFS is not installed. Installing ..."
            sudo apt-get install git-lfs
          fi
          git lfs install

      - name: Install colordiff
        run: sudo apt-get install colordiff

      - name: Set REMOTE_URL
        run: |
          echo "REMOTE_URL=https://${{ env.HF_USERNAME }}:${{ env.HF_TOKEN }}@huggingface.co/spaces/${{ env.HF_USERNAME }}/${{ env.HF_REPO }}" >> $GITHUB_ENV

      - name: Clone Hugging Face Repository
        run: |
          GIT_LFS_SKIP_SMUDGE=1 git clone --quiet --branch=main --single-branch --depth=1 "$REMOTE_URL" "${{ env.LOCAL_DIR }}"
        continue-on-error: true

      - name: Display cloned directory contents
        run: |
          ls -al "${{ github.workspace }}/${{ env.LOCAL_DIR }}/${{ env.JSON_DATA_PATH }}"

      - name: Compare file contents
        run: |
          SOURCE_DIR="${{ github.workspace }}/json_data"
          TARGET_DIR="${{ github.workspace }}/${{ env.LOCAL_DIR }}/${{ env.JSON_DATA_PATH }}"

          # Create a header for the table
          echo -e "File\t\tComparison Result"

          for file in $(find "$SOURCE_DIR" -type f -name '*.json'); do
            target_file="$TARGET_DIR/$(basename "$file")"
            if [ -e "$target_file" ]; then
              # Check if files differ
              if ! cmp -s "$target_file" "$file"; then
                # Print the filename and a message indicating files differ
                echo -e "$(basename "$file")\t\tFiles differ"
                # Display unified diff without lines starting with + or -
                colordiff -u "$target_file" "$file" | sed -n '/^[^+-]/p'
              fi
            else
              # Print the filename and a message indicating absence in TARGET_DIR
              echo -e "$(basename "$file")\t\tNot present in TARGET_DIR"
            fi
          done | column -t -s $'\t'

      - name: Replace non-identical files and commit to Hugging Face
        run: |
          SOURCE_DIR="${{ github.workspace }}/json_data"
          TARGET_DIR="${{ github.workspace }}/${{ env.LOCAL_DIR }}/${{ env.JSON_DATA_PATH }}"

          # Create an array to store files that need to be updated
          files_to_update=()

          if [ -d "$TARGET_DIR" ]; then
            for file in $(find "$SOURCE_DIR" -type f -name '*.json'); do
              target_file="$TARGET_DIR/$(basename "$file")"
              if [ -e "$target_file" ]; then
                # Check if files differ
                if ! cmp -s "$target_file" "$file"; then
                  cp "$file" "$target_file"
                  files_to_update+=("${{ env.JSON_DATA_PATH }}/$(basename "$file")")
                fi
              else
                # If target file doesn't exist, copy it and add to the update list
                cp "$file" "$target_file"
                files_to_update+=("${{ env.JSON_DATA_PATH }}/$(basename "$file")")
              fi
            done
          else
            echo "Target directory '$TARGET_DIR' does not exist. Creating it ..."
            mkdir -p "$TARGET_DIR"
          fi

          if [ ${#files_to_update[@]} -eq 0 ]; then
            echo "No files to update."
          else
            # Change working directory to the target directory
            cd "$TARGET_DIR" || exit 1

            # Set user email and username
            git config --global user.email "dl_03.03.1991@mail.ru"
            git config --global user.name "DmitryRyumin"

            # Commit all changes in the target directory
            git add .
            git commit -m "Update JSON files in ${{ env.JSON_DATA_PATH }}"
            git push https://${{ env.HF_USERNAME }}:${{ env.HF_TOKEN }}@huggingface.co/spaces/${{ env.HF_USERNAME }}/${{ env.HF_REPO }} main
          fi

      - name: Set output status
        run: |
          if [ $? -eq 0 ]; then
            echo "status=success" >> $GITHUB_ENV
          else
            echo "status=failure" >> $GITHUB_ENV
          fi
